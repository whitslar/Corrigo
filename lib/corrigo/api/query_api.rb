=begin
#Corrigo Api Integration

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'cgi'

module Corrigo
  class QueryApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve Multiple by query
    # @param entity_name [String] entity type
    # @param api_version [String] 
    # @param authorization [String] Bearer token
    # @param company_name [String] Company friendly name
    # @param body [QueryRequest] command request with query expression
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def query_retrieve_multiple(entity_name, api_version, authorization, company_name, body, opts = {})
      data, _status_code, _headers = query_retrieve_multiple_with_http_info(entity_name, api_version, authorization, company_name, body, opts)
      data
    end

    # Retrieve Multiple by query
    # @param entity_name [String] entity type
    # @param api_version [String] 
    # @param authorization [String] Bearer token
    # @param company_name [String] Company friendly name
    # @param body [QueryRequest] command request with query expression
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def query_retrieve_multiple_with_http_info(entity_name, api_version, authorization, company_name, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: QueryApi.query_retrieve_multiple ...'
      end
      # verify the required parameter 'entity_name' is set
      if @api_client.config.client_side_validation && entity_name.nil?
        fail ArgumentError, "Missing the required parameter 'entity_name' when calling QueryApi.query_retrieve_multiple"
      end
      # verify the required parameter 'api_version' is set
      if @api_client.config.client_side_validation && api_version.nil?
        fail ArgumentError, "Missing the required parameter 'api_version' when calling QueryApi.query_retrieve_multiple"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling QueryApi.query_retrieve_multiple"
      end
      # verify the required parameter 'company_name' is set
      if @api_client.config.client_side_validation && company_name.nil?
        fail ArgumentError, "Missing the required parameter 'company_name' when calling QueryApi.query_retrieve_multiple"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling QueryApi.query_retrieve_multiple"
      end
      # resource path
      local_var_path = '/v{apiVersion}/query/{entityName}'.sub('{' + 'entityName' + '}', CGI.escape(entity_name.to_s)).sub('{' + 'apiVersion' + '}', CGI.escape(api_version.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Authorization'] = authorization
      header_params[:'CompanyName'] = company_name

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(body)

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"QueryApi.query_retrieve_multiple",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: QueryApi#query_retrieve_multiple\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
